@model IEnumerable<PatientPortal.Models.Patient>
@using Kendo.Mvc.UI

@{ ViewData["Title"] = "Index"; }

@(Html.Kendo().Grid<PatientPortal.Models.Patient>()
                .Name("Grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.PatientId).Title("ID").Width(100);
                    columns.Bound(p => p.FirstName).Title("First Name").Width(100);
                    columns.Bound(p => p.LastName).Title("Last Name").Width(100);
                    columns.Bound(p => p.BirthDate).Title("Birth Date").Width(100);
                    
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Create();
                    toolbar.Save();
                })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Navigatable()
    .Sortable()
    .Groupable()
    .Filterable()
    .Scrollable()
    .Events(events => events.Sort("onSort"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.PatientId);
            model.Field(p => p.PatientId).Editable(false);
        })
        .Create("Create", "Grid")
        .Read("Index", "Grid")
        .Update("Edit", "Grid")
        .Destroy("Delete", "Grid")
    )

    )
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    function templateCell(data) {
        var template = "";
        if (data.dirtyFields.Category) {
            template += "<span class='k-dirty'></span>"
        }
        template += data.Category.CategoryName;
        return template;
    }

    // Prevent sorting when new record without Product Name is added
    function onSort(e) {
        var gridData = e.sender.dataSource.data()
        gridData.forEach(function (element) {
            if (!element.ProductName) {
                e.preventDefault()
            }
        });
    }
</script>